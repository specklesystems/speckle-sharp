<Styles
  xmlns="https://github.com/avaloniaui"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:animations="clr-namespace:Material.Styles.Additional.Animations;assembly=Material.Styles"
  xmlns:assists="clr-namespace:Material.Styles.Assists;assembly=Material.Styles"
  xmlns:cc="clr-namespace:Material.Styles;assembly=Material.Styles"
  xmlns:converters="clr-namespace:Material.Styles.Converters;assembly=Material.Styles"
  xmlns:ripple="clr-namespace:Material.Ripple;assembly=Material.Ripple"
  xmlns:system="clr-namespace:System;assembly=netstandard">
  <Styles.Resources>
    <ResourceDictionary>
      <converters:BrushRoundConverter x:Key="BrushRoundConverter" />
      <system:Double x:Key="ButtonHoveredOpacity">0.12</system:Double>
      <system:Double x:Key="ButtonPressedOpacity">0.26</system:Double>
      <system:Double x:Key="ButtonDisabledOpacity">0.38</system:Double>
      <CornerRadius x:Key="FloatingButtonRoundCorner">32</CornerRadius>
    </ResourceDictionary>
  </Styles.Resources>

  <Style Selector="cc|FloatingButton">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Padding" Value="16" />
    <Setter Property="assists:ShadowAssist.ShadowDepth" Value="Depth1" />
    <Setter Property="assists:ButtonAssist.HoverColor" Value="{Binding Foreground, Converter={StaticResource BrushRoundConverter}, RelativeSource={RelativeSource Self}}" />
    <Setter Property="assists:ButtonAssist.ClickFeedbackColor" Value="#000000" />
    <Setter Property="TextBlock.FontWeight" Value="Medium" />
    <Setter Property="TextBlock.FontSize" Value="14" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="ClipToBounds" Value="False" />
    <Setter Property="Template">
      <ControlTemplate>
        <Border
          Name="PART_ButtonRootBorder"
          assists:ShadowAssist.ShadowDepth="{TemplateBinding assists:ShadowAssist.ShadowDepth}"
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="{TemplateBinding BorderThickness}"
          CornerRadius="{StaticResource FloatingButtonRoundCorner}">
          <Border ClipToBounds="True" CornerRadius="{StaticResource FloatingButtonRoundCorner}">
            <Grid MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}">
              <Border Name="PART_HoverIndicator" Background="{TemplateBinding assists:ButtonAssist.HoverColor}" />
              <ripple:RippleEffect RippleFill="{TemplateBinding assists:ButtonAssist.ClickFeedbackColor}" RippleOpacity="{StaticResource ButtonPressedOpacity}">
                <ContentPresenter
                  Name="PART_ContentPresenter"
                  Padding="{TemplateBinding Padding}"
                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                  Content="{TemplateBinding Content}"
                  ContentTemplate="{TemplateBinding ContentTemplate}"
                  TextBlock.Foreground="{TemplateBinding Foreground}" />
              </ripple:RippleEffect>
            </Grid>
          </Border>
        </Border>
      </ControlTemplate>
    </Setter>
  </Style>

  <!--  Transitions  -->

  <!--<Style Selector="cc|FloatingButton[IsVisible=true].notransitions /template/ Border#PART_ButtonRootBorder">
    <Style.Animations>
      <Animation Duration="0:0:0.001" FillMode="Both" Easing="QuarticEaseInOut">
        <KeyFrame Cue="0%">
          <Setter Property="Opacity" Value="0" />
          <Setter Property="ScaleTransform.ScaleX" Value="0" />
          <Setter Property="ScaleTransform.ScaleY" Value="0" />
        </KeyFrame>
        <KeyFrame Cue="100%">
          <Setter Property="Opacity" Value="1" />
          <Setter Property="ScaleTransform.ScaleX" Value="1" />
          <Setter Property="ScaleTransform.ScaleY" Value="1" />
        </KeyFrame>
      </Animation>
    </Style.Animations>
  </Style>

  <Style Selector="cc|FloatingButton[IsVisible=true]:not(.notransitions) /template/ Border#PART_ButtonRootBorder">
    <Style.Animations>
      <Animation Duration="0:0:0.5" FillMode="Both" Easing="QuarticEaseInOut">
        <KeyFrame Cue="0%">
          <Setter Property="Opacity" Value="0" />
          <Setter Property="ScaleTransform.ScaleX" Value="0" />
          <Setter Property="ScaleTransform.ScaleY" Value="0" />
        </KeyFrame>
        <KeyFrame Cue="100%">
          <Setter Property="Opacity" Value="1" />
          <Setter Property="ScaleTransform.ScaleX" Value="1" />
          <Setter Property="ScaleTransform.ScaleY" Value="1" />
        </KeyFrame>
      </Animation>
    </Style.Animations>
  </Style>-->

  <Style Selector="cc|FloatingButton:not(.notransitions) /template/ Border#PART_HoverIndicator">
    <Setter Property="Transitions">
      <Transitions>
        <DoubleTransition
          Easing="LinearEasing"
          Property="Opacity"
          Duration="0:0:0.25" />
      </Transitions>
    </Setter>
  </Style>

  <!--  Default state and appeared state  -->

  <!--<Style Selector="cc|FloatingButton">
    <Setter Property="Opacity" Value="0"/>
    <Setter Property="ScaleTransform.ScaleX" Value="0" />
    <Setter Property="ScaleTransform.ScaleY" Value="0" />
  </Style>

  <Style Selector="cc|FloatingButton[IsVisible=true]:not(.no-material)">
    <Setter Property="Opacity" Value="1"/>
    <Setter Property="ScaleTransform.ScaleX" Value="1" />
    <Setter Property="ScaleTransform.ScaleY" Value="1" />
  </Style>-->

  <Style Selector="cc|FloatingButton:not(.no-material) /template/ Border#PART_HoverIndicator">
    <Setter Property="Opacity" Value="0" />
  </Style>

  <!--  Feedbacks  -->

  <Style Selector="cc|FloatingButton:pointerover:not(.no-material) /template/ Border#PART_ButtonRootBorder">
    <Setter Property="assists:ShadowAssist.Darken" Value="True" />
  </Style>

  <Style Selector="cc|FloatingButton:pointerover:not(.no-material) /template/ Border#PART_HoverIndicator">
    <Setter Property="Opacity" Value="{StaticResource ButtonHoveredOpacity}" />
  </Style>


  <!--  Mini and extended style  -->

  <Style Selector="cc|FloatingButton">
    <Setter Property="MinHeight" Value="40" />
    <Setter Property="MinWidth" Value="40" />
    <Setter Property="Height" Value="40" />
    <Setter Property="Width" Value="40" />
    <Setter Property="Padding" Value="8" />
  </Style>
  <Style Selector="cc|FloatingButton.Mini">
    <Setter Property="MinHeight" Value="30" />
    <Setter Property="MinWidth" Value="30" />
    <Setter Property="Height" Value="30" />
    <Setter Property="Width" Value="30" />
    <Setter Property="Padding" Value="4" />
  </Style>
  <Style Selector="cc|FloatingButton[IsExtended=true]">
    <Setter Property="MinWidth" Value="32" />
    <Setter Property="MinHeight" Value="32" />
    <Setter Property="Height" Value="32" />
    <Setter Property="Width" Value="NaN" />
    <Setter Property="Padding" Value="5" />
  </Style>
  <Style Selector="cc|FloatingButton.Invisible">
    <Setter Property="assists:ShadowAssist.ShadowDepth" Value="Depth0" />
    <Setter Property="assists:ButtonAssist.HoverColor" Value="Transparent" />
  </Style>

  <!--  Extended state transition (currently it doesnt works due AvaloniaUI bug)  -->

  <!--Style Selector="cc|FloatingButton:not(.notransitions),
         cc|FloatingButton:not(.notransitions) /template/ Grid#TemplateRoot">
    <Setter Property="Transitions">
      <Transitions>
        <DoubleTransition Duration="0:0:0.5" Property="Width" Easing="CubicEaseOut"/>
        <DoubleTransition Duration="0:0:0.5" Property="Height" Easing="CubicEaseOut"/>
      </Transitions>
    </Setter>
  </Style>

  <Style Selector="cc|FloatingButton[IsExtended=true] /template/ Grid#TemplateRoot">
    <Setter Property="Width" Value="{Binding #ContentBorder.Bounds.Width}" />
    <Setter Property="Height" Value="{Binding #ContentBorder.Bounds.Height}" />
  </Style-->


  <!--  Color definitions  -->

  <Style Selector="cc|FloatingButton.Light">
    <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}" />
  </Style>

  <Style Selector="cc|FloatingButton.Dark">
    <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}" />
  </Style>

  <Style Selector="cc|FloatingButton.Accent">
    <Setter Property="Background" Value="{DynamicResource SecondaryHueMidBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource SecondaryHueMidBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidForegroundBrush}" />
  </Style>

  <Style Selector="cc|FloatingButton.Light Path">
    <Setter Property="Fill" Value="{DynamicResource PrimaryHueLightForegroundBrush}" />
  </Style>
  <Style Selector="cc|FloatingButton.Dark Path">
    <Setter Property="Fill" Value="{DynamicResource PrimaryHueDarkForegroundBrush}" />
  </Style>
  <Style Selector="cc|FloatingButton.Accent Path">
    <Setter Property="Fill" Value="{DynamicResource SecondaryHueMidForegroundBrush}" />
  </Style>
  <Style Selector="cc|FloatingButton Path">
    <Setter Property="Fill" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
  </Style>

  <Style Selector="cc|FloatingButton:disabled:not(.no-material)">
    <Setter Property="Opacity" Value="{StaticResource ButtonDisabledOpacity}" />
  </Style>

  <Design.PreviewWith>
    <Border Padding="20">
      <StackPanel Orientation="Vertical" Spacing="10">
        <cc:FloatingButton />
        <cc:FloatingButton Classes="Mini" />


      </StackPanel>
    </Border>
  </Design.PreviewWith>
</Styles>