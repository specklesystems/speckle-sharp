<Styles
  xmlns="https://github.com/avaloniaui"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:assists="clr-namespace:Material.Styles.Assists;assembly=Material.Styles"
  xmlns:icons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
  xmlns:m="clr-namespace:Material.Styles;assembly=Material.Styles">
  <Design.PreviewWith>
    <StackPanel
      Width="360"
      Height="200"
      Margin="15"
      Orientation="Vertical">
      <Button
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Content="Hello!" />
      <Button
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Classes="Hyperlink"
        Content="Hello!" />

      <Button Classes="Send" />
      <Button Classes="SendFull" />
    </StackPanel>
  </Design.PreviewWith>
  <Style Selector="Button">
    <Setter Property="Foreground" Value="White" />
  </Style>
  <Style Selector="Button.Flat">
    <Setter Property="TextBlock.FontWeight" Value="Light" />
  </Style>
  <Style Selector="Button.Mini">
    <Setter Property="TextBlock.FontWeight" Value="Light" />
    <Setter Property="Padding" Value="7,2" />
  </Style>
  <Style Selector="Button.Hyperlink &gt; TextBlock">
    <Setter Property="FontSize" Value="10" />

  </Style>
  <Style Selector="Button.Invisible">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="CornerRadius" Value="0" />
    <Setter Property="assists:ShadowAssist.ShadowDepth" Value="Depth0" />
  </Style>


  <!--  SEND BUTTONS  -->

  <Style Selector="icons|MaterialIcon#send">
    <Setter Property="RenderTransform" Value="rotate(-30deg)" />
  </Style>
  <Style Selector="m|FloatingButton:pointerover icons|MaterialIcon#send">
    <Setter Property="RenderTransform" Value="rotate(-45deg)" />
  </Style>

  <Style Selector="Button.Send">
    <Setter Property="Template">
      <ControlTemplate>
        <Grid Margin="4">
          <m:FloatingButton
            VerticalAlignment="Center"
            Command="{Binding SendCommand, FallbackValue={x:Null}}"
            IsDefault="True"
            IsEnabled="{Binding Progress.IsProgressing, Converter={x:Static BoolConverters.Not}, FallbackValue=True}"
            ToolTip.Tip="Send to this stream and saves it">
            <Button.Content>
              <icons:MaterialIcon
                Name="send"
                Width="20"
                Height="20"
                Foreground="White"
                Kind="CubeSend">
                <icons:MaterialIcon.Transitions>
                  <Transitions>
                    <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.2" />
                  </Transitions>
                </icons:MaterialIcon.Transitions>
              </icons:MaterialIcon>
            </Button.Content>
          </m:FloatingButton>

          <Grid>
            <ProgressBar
              Width="40"
              Height="40"
              Classes="Circle"
              IsEnabled="{Binding !Progress.IsPreviewProgressing, FallbackValue=True}"
              IsIndeterminate="{Binding Progress.IsIndeterminate, FallbackValue=True}"
              IsVisible="{Binding Progress.IsProgressing, FallbackValue=False}"
              Maximum="{Binding Progress.Max}"
              Value="{Binding Progress.Value}" />
            <m:FloatingButton
              assists:ButtonAssist.HoverColor="Transparent"
              assists:ShadowAssist.ShadowDepth="0"
              Background="Transparent"
              Classes="Mini"
              Command="{Binding CancelSendOrReceiveCommand}"
              IsEnabled="{Binding !Progress.IsPreviewProgressing, FallbackValue=True}"
              IsVisible="{Binding Progress.IsProgressing, FallbackValue=False}"
              ToolTip.Tip="Cancel">
              <Button.Content>
                <icons:MaterialIcon
                  Width="15"
                  Height="15"
                  Foreground="{DynamicResource PrimaryHueDarkBrush}"
                  Kind="Close" />
              </Button.Content>
            </m:FloatingButton>
          </Grid>
        </Grid>
      </ControlTemplate>
    </Setter>
  </Style>



  <Style Selector="Button.SendFull">
    <Setter Property="Template">
      <ControlTemplate>
        <Grid>
          <Button
            Width="200"
            Height="40"
            HorizontalAlignment="Center"
            Command="{Binding SendCommand}"
            CornerRadius="40"
            IsDefault="True"
            IsEnabled="{Binding Progress.IsProgressing, Converter={x:Static BoolConverters.Not}, FallbackValue=True}"
            ToolTip.Tip="Send to this stream and saves it">
            <Button.Content>
              <StackPanel Orientation="Horizontal" Spacing="12">

                <icons:MaterialIcon
                  Name="send"
                  Width="20"
                  Height="20"
                  Foreground="White"
                  Kind="CubeSend">
                  <icons:MaterialIcon.Transitions>
                    <Transitions>
                      <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.2" />
                    </Transitions>
                  </icons:MaterialIcon.Transitions>
                </icons:MaterialIcon>
                <TextBlock
                  Classes="ButtonText"
                  FontWeight="Bold"
                  Text="SEND" />
              </StackPanel>

            </Button.Content>
          </Button>
          <Grid IsEnabled="{Binding !Progress.IsPreviewProgressing, FallbackValue=True}" IsVisible="{Binding Progress.IsProgressing, FallbackValue=False}">
            <ProgressBar
              Width="200"
              Height="40"
              IsIndeterminate="{Binding Progress.IsIndeterminate, FallbackValue=True}"
              Maximum="{Binding Progress.Max}"
              Value="{Binding Progress.Value}">
              <ProgressBar.Clip>
                <PathGeometry>
                  <PathFigure IsClosed="True" StartPoint="0,0">
                    <LineSegment Point="180,0" />
                    <ArcSegment Point="200,20" Size="20,20" />
                    <ArcSegment Point="180,40" Size="20,20" />
                    <LineSegment Point="20,40" />
                    <ArcSegment Point="0,20" Size="20,20" />
                    <ArcSegment Point="20,0" Size="20,20" />
                  </PathFigure>
                </PathGeometry>
              </ProgressBar.Clip>
            </ProgressBar>

            <Button
              Width="200"
              Height="40"
              assists:ButtonAssist.HoverColor="Transparent"
              assists:ShadowAssist.ShadowDepth="0"
              Background="Transparent"
              Command="{Binding CancelSendOrReceiveCommand}"
              CornerRadius="40"
              ToolTip.Tip="Cancel">
              <Button.Content>
                <StackPanel Orientation="Horizontal" Spacing="12">
                  <icons:MaterialIcon
                    Width="20"
                    Height="20"
                    Foreground="White"
                    Kind="Remove" />
                  <TextBlock
                    Classes="ButtonText"
                    FontWeight="Bold"
                    Text="CANCEL" />
                </StackPanel>

              </Button.Content>
            </Button>
          </Grid>

        </Grid>
      </ControlTemplate>
    </Setter>
  </Style>

  <!--  RECEIVE BUTTONS  -->
  <Style Selector="icons|MaterialIcon#receive">
    <Setter Property="RenderTransform" Value="rotate(30deg) scaleX(-1)" />
  </Style>
  <Style Selector="m|FloatingButton:pointerover icons|MaterialIcon#receive">
    <Setter Property="RenderTransform" Value="rotate(15deg) scaleX(-1)" />
  </Style>

  <Style Selector="Button.Receive">
    <Setter Property="Template">
      <ControlTemplate>
        <Grid Margin="4">
          <m:FloatingButton
            VerticalAlignment="Center"
            Command="{Binding ReceiveCommand}"
            IsDefault="True"
            IsEnabled="{Binding Progress.IsProgressing, Converter={x:Static BoolConverters.Not}}"
            ToolTip.Tip="Receive from this stream and saves it">
            <Button.Content>
              <icons:MaterialIcon
                Name="receive"
                Width="20"
                Height="20"
                Foreground="White"
                Kind="CubeSend"
                ToolTip.Tip="Receive">
                <icons:MaterialIcon.Transitions>
                  <Transitions>
                    <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.2" />
                  </Transitions>
                </icons:MaterialIcon.Transitions>

              </icons:MaterialIcon>

            </Button.Content>
          </m:FloatingButton>

          <Grid>
            <ProgressBar
              Width="40"
              Height="40"
              Classes="Circle"
              IsEnabled="{Binding !Progress.IsPreviewProgressing, FallbackValue=True}"
              IsIndeterminate="{Binding Progress.IsIndeterminate, FallbackValue=True}"
              IsVisible="{Binding Progress.IsProgressing, FallbackValue=False}"
              Maximum="{Binding Progress.Max}"
              Value="{Binding Progress.Value}" />
            <m:FloatingButton
              assists:ButtonAssist.HoverColor="Transparent"
              assists:ShadowAssist.ShadowDepth="0"
              Background="Transparent"
              Classes="Mini"
              Command="{Binding CancelSendOrReceiveCommand}"
              IsEnabled="{Binding !Progress.IsPreviewProgressing, FallbackValue=True}"
              IsVisible="{Binding Progress.IsProgressing, FallbackValue=False}"
              ToolTip.Tip="Cancel">
              <Button.Content>
                <icons:MaterialIcon
                  Width="15"
                  Height="15"
                  Foreground="{DynamicResource PrimaryHueDarkBrush}"
                  Kind="Close" />
              </Button.Content>
            </m:FloatingButton>
          </Grid>
        </Grid>

      </ControlTemplate>
    </Setter>
  </Style>



  <Style Selector="Button.ReceiveFull">
    <Setter Property="Template">
      <ControlTemplate>
        <Grid>
          <Button
            Width="200"
            Height="40"
            HorizontalAlignment="Center"
            Command="{Binding ReceiveCommand}"
            CornerRadius="40"
            IsDefault="True"
            IsEnabled="{Binding Progress.IsProgressing, Converter={x:Static BoolConverters.Not}, FallbackValue=True}"
            ToolTip.Tip="Receives from this stream and saves it">
            <Button.Content>
              <StackPanel Orientation="Horizontal" Spacing="12">

                <icons:MaterialIcon
                  Name="receive"
                  Width="20"
                  Height="20"
                  Foreground="White"
                  Kind="CubeSend"
                  ToolTip.Tip="Receive">
                  <icons:MaterialIcon.Transitions>
                    <Transitions>
                      <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.2" />
                    </Transitions>
                  </icons:MaterialIcon.Transitions>

                </icons:MaterialIcon>
                <TextBlock
                  Classes="ButtonText"
                  FontWeight="Bold"
                  Text="RECEIVE" />
              </StackPanel>

            </Button.Content>
          </Button>
          <Grid IsEnabled="{Binding !Progress.IsPreviewProgressing, FallbackValue=True}" IsVisible="{Binding Progress.IsProgressing, FallbackValue=False}">
            <ProgressBar
              Width="200"
              Height="40"
              IsIndeterminate="{Binding Progress.IsIndeterminate, FallbackValue=True}"
              Maximum="{Binding Progress.Max}"
              Value="{Binding Progress.Value}">
              <ProgressBar.Clip>
                <PathGeometry>
                  <PathFigure IsClosed="True" StartPoint="0,0">
                    <LineSegment Point="180,0" />
                    <ArcSegment Point="200,20" Size="20,20" />
                    <ArcSegment Point="180,40" Size="20,20" />
                    <LineSegment Point="20,40" />
                    <ArcSegment Point="0,20" Size="20,20" />
                    <ArcSegment Point="20,0" Size="20,20" />
                  </PathFigure>
                </PathGeometry>
              </ProgressBar.Clip>
            </ProgressBar>

            <Button
              Width="200"
              Height="40"
              assists:ButtonAssist.HoverColor="Transparent"
              assists:ShadowAssist.ShadowDepth="0"
              Background="Transparent"
              Command="{Binding CancelSendOrReceiveCommand}"
              CornerRadius="40"
              ToolTip.Tip="Cancel">
              <Button.Content>
                <StackPanel Orientation="Horizontal" Spacing="12">
                  <icons:MaterialIcon
                    Width="20"
                    Height="20"
                    Foreground="White"
                    Kind="Remove" />
                  <TextBlock
                    Classes="ButtonText"
                    FontWeight="Bold"
                    Text="CANCEL" />
                </StackPanel>

              </Button.Content>
            </Button>
          </Grid>

        </Grid>
      </ControlTemplate>
    </Setter>
  </Style>

</Styles>
