<UserControl
  x:Class="DesktopUI2.Views.Pages.HomeView"
  xmlns="https://github.com/avaloniaui"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:assists="clr-namespace:Material.Styles.Assists;assembly=Material.Styles"
  xmlns:conv="clr-namespace:DesktopUI2.Views.Converters"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:dvm="clr-namespace:DesktopUI2.ViewModels.DesignViewModels"
  xmlns:icons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
  xmlns:local="clr-namespace:DesktopUI2.Views.Pages"
  xmlns:m="clr-namespace:Material.Styles;assembly=Material.Styles"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:ripple="clr-namespace:Material.Ripple;assembly=Material.Ripple"
  xmlns:sc="clr-namespace:DesktopUI2.Views.Pages.SharedControls"
  xmlns:uc="clr-namespace:DesktopUI2.Views.Pages.HomeControls"
  xmlns:vm="clr-namespace:DesktopUI2.ViewModels"
  d:DesignHeight="550"
  d:DesignWidth="400"
  mc:Ignorable="d">
  <Design.DataContext>
    <dvm:DesignHomeViewModel />
  </Design.DataContext>
  <UserControl.Resources>
    <conv:EnumBooleanConverter x:Key="EnumBooleanConverter" />
  </UserControl.Resources>
  <UserControl.Styles>
    <Style Selector="MenuItem.Profile">
      <Setter Property="Header">
        <Setter.Value>
          <Template>
            <Grid RowDefinitions="auto,auto">
              <TextBlock Text="{Binding FullAccountName}" />
              <TextBlock
                Grid.Row="1"
                Classes="Overline"
                Text="{Binding FullServerName}" />
            </Grid>
          </Template>
        </Setter.Value>

      </Setter>
      <Setter Property="Icon">
        <Setter.Value>
          <Template>
            <Image
              Width="20"
              Height="20"
              Source="{Binding AvatarImage}">

              <Image.Clip>
                <EllipseGeometry Rect="0,0,20,20" />
              </Image.Clip>
            </Image>
          </Template>
        </Setter.Value>
      </Setter>

    </Style>

  </UserControl.Styles>
  <Grid RowDefinitions="auto, *">
    <m:Card
      Padding="15,10"
      Background="{DynamicResource PrimaryHueMidBrush}"
      CornerRadius="0">
      <Grid ColumnDefinitions="auto,*">
        <StackPanel
          VerticalAlignment="Bottom"
          Orientation="Horizontal"
          Spacing="6">
          <Image Height="30" Source="../../Assets/logo.png" />
          <TextBlock
            Classes="SpeckleFont"
            FontSize="18"
            FontWeight="Medium"
            Foreground="White"
            Text="{Binding Title}" />

          <TextBlock
            Margin="0,0,0,8"
            VerticalAlignment="Bottom"
            FontSize="8"
            Foreground="White"
            Text="{Binding Version}" />
        </StackPanel>

        <StackPanel
          Grid.Column="1"
          HorizontalAlignment="Right"
          VerticalAlignment="Bottom"
          Orientation="Horizontal"
          Spacing="6">

          <!--<m:FloatingButton
            Grid.Column="1"
            VerticalAlignment="Center"
            assists:ShadowAssist.ShadowDepth="Depth0"
            Background="Transparent"
            Classes="Mini"
            Command="{Binding TestCommand}"
            ToolTip.Tip="Test stuff">
            <Button.Content>
              <icons:MaterialIcon
                Width="15"
                Height="15"
                assists:ShadowAssist.ShadowDepth="0"
                Foreground="{DynamicResource MaterialDesignBody}"
                Kind="Bomb" />

            </Button.Content>
          </m:FloatingButton>-->
          <m:FloatingButton
            Grid.Column="1"
            VerticalAlignment="Center"
            assists:ShadowAssist.ShadowDepth="Depth0"
            Background="Transparent"
            Classes="Mini"
            Command="{Binding ToggleDarkThemeCommand}"
            ToolTip.Tip="Toggle dark theme">
            <Button.Content>
              <icons:MaterialIcon
                Width="15"
                Height="15"
                assists:ShadowAssist.ShadowDepth="0"
                Foreground="White"
                Kind="SunMoonStars" />

            </Button.Content>
          </m:FloatingButton>
          <m:FloatingButton
            Grid.Column="1"
            VerticalAlignment="Center"
            assists:ShadowAssist.ShadowDepth="Depth0"
            Background="Transparent"
            Classes="Mini"
            Command="{Binding RefreshCommand}"
            ToolTip.Tip="Refresh">
            <Button.Content>
              <icons:MaterialIcon
                Width="15"
                Height="15"
                assists:ShadowAssist.ShadowDepth="0"
                Foreground="White"
                Kind="Refresh" />
            </Button.Content>
          </m:FloatingButton>

          <!--  ACCOUNT MENU  -->
          <Menu
            VerticalAlignment="Center"
            IsVisible="{Binding HasOneAccount}"
            ToolTip.Tip="Account">
            <MenuItem Padding="0">
              <MenuItem.Header>
                <Image
                  Width="28"
                  Height="28"
                  Source="{Binding Accounts[0].AvatarImage}">

                  <Image.Clip>
                    <EllipseGeometry Rect="0,0,28,28" />
                  </Image.Clip>
                </Image>
              </MenuItem.Header>
              <MenuItem
                Classes="Profile"
                Command="{Binding $parent[local:HomeView].DataContext.OpenProfileCommand}"
                CommandParameter="{Binding Account}"
                DataContext="{Binding Accounts[0]}" />
              <Separator />
              <MenuItem
                Command="{Binding AddAccountCommand}"
                Header="Add another account"
                Icon="{icons:MaterialIconExt AccountPlus}" />
              <MenuItem
                Command="{Binding LaunchManagerCommand}"
                Header="Manage accounts in Manager"
                Icon="{icons:MaterialIconExt AccountCog}" />
              <MenuItem
                Command="{Binding RemoveAccountCommand}"
                CommandParameter="{Binding Accounts[0].Account}"
                Header="Log Out"
                Icon="{icons:MaterialIconExt Logout}" />
            </MenuItem>
          </Menu>

          <!--  MULTIPLE ACCOUNTS MENU  -->
          <Menu
            VerticalAlignment="Center"
            IsVisible="{Binding HasMultipleAccounts}"
            ToolTip.Tip="Accounts">
            <MenuItem
              Width="30"
              Height="30"
              Foreground="White"
              Header="{icons:MaterialIconExt AccountMultiple}">

              <MenuItem
                Header="Accounts"
                Icon="{icons:MaterialIconExt AccountMultiple}"
                Items="{Binding Accounts}">
                <MenuItem.DataTemplates>
                  <DataTemplate>
                    <MenuItem Classes="Profile">
                      <MenuItem
                        Command="{Binding $parent[local:HomeView].DataContext.OpenProfileCommand}"
                        CommandParameter="{Binding Account}"
                        Header="View online"
                        Icon="{icons:MaterialIconExt ExternalLink}" />
                      <MenuItem
                        Command="{Binding $parent[local:HomeView].DataContext.RemoveAccountCommand}"
                        CommandParameter="{Binding Account}"
                        Header="Remove account"
                        Icon="{icons:MaterialIconExt AccountMinus}" />
                    </MenuItem>
                  </DataTemplate>

                </MenuItem.DataTemplates>
              </MenuItem>
              <MenuItem
                Command="{Binding $parent[local:HomeView].DataContext.AddAccountCommand}"
                Header="Add another account"
                Icon="{icons:MaterialIconExt AccountPlus}" />
              <MenuItem
                Command="{Binding $parent[local:HomeView].DataContext.LaunchManagerCommand}"
                Header="Manage accounts in Manager"
                Icon="{icons:MaterialIconExt AccountCog}" />

            </MenuItem>
          </Menu>

          <!--  UPDATE NOTIFICATION  -->
          <Menu
            VerticalAlignment="Center"
            IsVisible="{Binding HasUpdate}"
            ToolTip.Tip="Update available">
            <MenuItem
              Width="30"
              Height="30"
              Foreground="Red"
              Header="{icons:MaterialIconExt Notifications}">
              <MenuItem
                Command="{Binding LaunchManagerCommand}"
                Header="An update for this connector is available, install it now!"
                Icon="{icons:MaterialIconExt ExternalLink}" />
            </MenuItem>
          </Menu>

        </StackPanel>
      </Grid>
    </m:Card>
    <Grid
      Grid.Row="1"
      Margin="5,10,5,5"
      IsVisible="{Binding HasAccounts}"
      RowDefinitions="auto,auto, auto,auto, *">

      <!--  SEARCH STREAMS  -->
      <Grid Grid.Row="0" Margin="0">
        <m:Card
          Margin="5,0"
          Padding="0"
          HorizontalAlignment="Stretch"
          CornerRadius="25">
          <TextBox
            Margin="0"
            Padding="0"
            Classes="Solo Small"
            Text="{Binding SearchQuery}"
            Watermark="Search streams">
            <TextBox.InnerRightContent>
              <StackPanel Orientation="Horizontal">
                <m:FloatingButton
                  Grid.Column="1"
                  VerticalAlignment="Center"
                  assists:ShadowAssist.ShadowDepth="Depth0"
                  Background="Transparent"
                  Classes="Mini"
                  Command="{Binding ClearSearchCommand}"
                  IsVisible="{Binding SearchQuery, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                  ToolTip.Tip="Clear">
                  <Button.Content>
                    <icons:MaterialIcon
                      Width="15"
                      Height="15"
                      assists:ShadowAssist.ShadowDepth="0"
                      Foreground="{DynamicResource MaterialDesignBody}"
                      Kind="CloseCircle" />
                  </Button.Content>
                </m:FloatingButton>


                <Menu
                  Grid.Column="1"
                  Margin="2,0,0,0"
                  VerticalAlignment="Center"
                  ToolTip.Tip="Filter streams by ownership of favorite">

                  <MenuItem
                    Width="30"
                    Height="30"
                    Padding="0"
                    Classes="NoHighlight">
                    <MenuItem.Header>
                      <Grid>
                        <icons:MaterialIcon IsVisible="{Binding !ActiveFilter}" Kind="FilterVariant" />
                        <icons:MaterialIcon
                          Foreground="Red"
                          IsVisible="{Binding ActiveFilter}"
                          Kind="FilterVariant" />
                      </Grid>
                    </MenuItem.Header>

                    <RadioButton
                      HorizontalContentAlignment="Center"
                      Classes="Button"
                      Content="all"
                      GroupName="3"
                      IsChecked="{Binding SelectedFilter, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=all}" />

                    <RadioButton
                      HorizontalContentAlignment="Center"
                      Classes="Button"
                      Content="owner"
                      GroupName="3"
                      IsChecked="{Binding Path=SelectedFilter, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=owner}" />
                    <RadioButton
                      HorizontalContentAlignment="Center"
                      Classes="Button"
                      Content="contributor"
                      GroupName="3"
                      IsChecked="{Binding Path=SelectedFilter, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=contributor}" />
                    <RadioButton
                      HorizontalContentAlignment="Center"
                      Classes="Button"
                      Content="reviewer"
                      GroupName="3"
                      IsChecked="{Binding Path=SelectedFilter, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=reviewer}" />
                    <RadioButton
                      Classes="Button"
                      Content="{icons:MaterialIconExt Kind=Heart}"
                      GroupName="3"
                      IsChecked="{Binding Path=SelectedFilter, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=favorite}" />

                  </MenuItem>
                </Menu>
              </StackPanel>

            </TextBox.InnerRightContent>
            <TextBox.InnerLeftContent>
              <icons:MaterialIcon
                Width="15"
                Height="15"
                Margin="5,0,0,0"
                Kind="Search" />
            </TextBox.InnerLeftContent>
          </TextBox>
        </m:Card>

      </Grid>


      <!--  CREATE/ADD STREAMS  -->
      <Grid
        Grid.Row="1"
        Margin="0,15,0,5"
        ColumnDefinitions="*,*">
        <Button
          Margin="0,0,7,0"
          Classes="Flat"
          Command="{Binding NewStreamCommand}">
          <Grid Margin="0" ColumnDefinitions="auto,*">
            <icons:MaterialIcon VerticalAlignment="Center" Kind="Plus" />
            <TextBlock
              Grid.Column="1"
              Margin="8,0"
              Padding="0"
              VerticalAlignment="Center"
              Text="Create new Stream"
              TextTrimming="CharacterEllipsis" />
          </Grid>
        </Button>
        <Button
          Grid.Column="1"
          Margin="7,0,0,0"
          Classes="Flat"
          Command="{Binding AddFromUrlCommand}">
          <Grid ColumnDefinitions="auto,*">
            <icons:MaterialIcon VerticalAlignment="Center" Kind="Link" />
            <TextBlock
              Grid.Column="1"
              Margin="8,0"
              VerticalAlignment="Center"
              Text="Add by ID or URL"
              TextTrimming="CharacterEllipsis" />
          </Grid>
        </Button>
      </Grid>
      <Grid
        Grid.Row="2"
        Margin="0,10,0,0"
        IsVisible="{Binding InProgress}">
        <ProgressBar IsIndeterminate="True" />
      </Grid>


      <ScrollViewer
        Grid.Row="4"
        Padding="0,5,13,5"
        IsEnabled="{Binding InProgress, Converter={x:Static BoolConverters.Not}, FallbackValue=True}">
        <StackPanel Margin="5,0,5,5" Orientation="Vertical">
          <!--  SAVED STREAMS  -->
          <Expander
            Margin="0,7,0,0"
            IsExpanded="True"
            IsVisible="{Binding HasSavedStreams}">
            <Expander.Header>
              <TextBlock
                Margin="-8,0,0,0"
                Classes="Overline"
                Foreground="Gray"
                IsVisible="{Binding HasSavedStreams}"
                Text="SAVED STREAMS:" />
            </Expander.Header>
            <uc:SavedStreams />
          </Expander>



          <!--  ALL STREAMS  -->

          <Expander Margin="0,10,0,0" IsExpanded="True">
            <Expander.Header>
              <TextBlock
                Margin="-8,0,0,0"
                Padding="0"
                Classes="Overline"
                Foreground="Gray"
                Text="{Binding StreamsText, FallbackValue='ALL STREAMS:'}" />
            </Expander.Header>
            <Grid IsVisible="{Binding InProgress, Converter={x:Static BoolConverters.Not}}">
              <TextBlock
                Margin="15"
                IsVisible="{Binding HasStreams, Converter={x:Static BoolConverters.Not}, FallbackValue=False}"
                Text="No streams found 😅&#x0a;&#x0a;You can create a new one or add a public stream by ID or URL."
                TextAlignment="Center"
                TextWrapping="Wrap" />
              <ItemsRepeater
                Background="Transparent"
                IsEnabled="{Binding InProgress, Converter={x:Static BoolConverters.Not}}"
                IsVisible="{Binding HasStreams}"
                Items="{Binding FilteredStreams}">
                <ItemsRepeater.Styles>
                  <Style Selector="Button.Invisible:not(:pointerover) StackPanel#HoverButtons">
                    <Setter Property="IsVisible" Value="False" />
                  </Style>
                  <Style Selector="Button.Invisible:pointerover StackPanel#HoverButtons">
                    <Setter Property="IsVisible" Value="True" />
                  </Style>
                </ItemsRepeater.Styles>
                <ItemsRepeater.ItemTemplate>
                  <DataTemplate>
                    <Button
                      Padding="5,7"
                      Classes="Invisible"
                      Command="{Binding $parent[local:HomeView].DataContext.OpenStreamCommand}"
                      CommandParameter="{Binding}">
                      <Grid
                        Margin="4,0"
                        ColumnDefinitions="*,Auto"
                        RowDefinitions="auto, auto">
                        <Grid Grid.ColumnSpan="2" ColumnDefinitions="*,auto">
                          <TextBlock
                            Classes="Medium"
                            Text="{Binding Stream.name}"
                            TextTrimming="CharacterEllipsis" />
                          <icons:MaterialIcon
                            Grid.Column="1"
                            Width="10"
                            Height="10"
                            Margin="5,0,0,0"
                            VerticalAlignment="Center"
                            IsVisible="{Binding Stream.favoritedDate, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                            Kind="Heart"
                            ToolTip.Tip="This is a favorite stream" />
                        </Grid>
                        <Grid
                          Grid.Row="1"
                          Grid.Column="0"
                          RowDefinitions="15,15, auto">


                          <TextBlock
                            Grid.Row="0"
                            Margin="0,3,0,0"
                            Classes="Caption"
                            MaxLines="1"
                            Text="{Binding Stream.description}"
                            TextTrimming="CharacterEllipsis" />

                          <sc:StreamDetails Grid.Row="1" />

                          <Grid
                            Grid.Row="2"
                            Margin="0,3,0,0"
                            ColumnDefinitions="auto,auto,*"
                            IsVisible="{Binding $parent[local:HomeView].DataContext.HasOneAccount, Converter={x:Static BoolConverters.Not}}">
                            <Grid.Styles>
                              <Style Selector="TextBlock">
                                <Setter Property="Foreground" Value="LightGray" />
                              </Style>
                            </Grid.Styles>
                            <TextBlock
                              Classes="Overline"
                              Text="{Binding Account.userInfo.email}"
                              TextTrimming="CharacterEllipsis" />
                            <TextBlock
                              Grid.Column="1"
                              Classes="Overline"
                              Text=" | " />
                            <TextBlock
                              Grid.Column="2"
                              Classes="Overline"
                              Text="{Binding Account.serverInfo.url}"
                              TextTrimming="CharacterEllipsis" />
                          </Grid>


                        </Grid>
                        <StackPanel
                          Name="HoverButtons"
                          Grid.Row="1"
                          Grid.Column="1"
                          Margin="0,0,0,0"
                          VerticalAlignment="Top"
                          Orientation="Horizontal"
                          Spacing="10">

                          <m:FloatingButton
                            VerticalAlignment="Center"
                            assists:ShadowAssist.ShadowDepth="0"
                            Background="Transparent"
                            Classes="Mini"
                            Command="{Binding $parent[local:HomeView].DataContext.ViewOnlineCommand}"
                            CommandParameter="{Binding}"
                            ToolTip.Tip="View online">
                            <Button.Content>
                              <icons:MaterialIcon
                                Width="15"
                                Height="15"
                                Foreground="Gray"
                                Kind="ExternalLink" />

                            </Button.Content>
                          </m:FloatingButton>
                        </StackPanel>
                      </Grid>


                    </Button>
                  </DataTemplate>
                </ItemsRepeater.ItemTemplate>

              </ItemsRepeater>
            </Grid>
          </Expander>

        </StackPanel>

      </ScrollViewer>


    </Grid>
    <Grid
      Grid.Row="1"
      Margin="15"
      IsVisible="{Binding HasAccounts, Converter={x:Static BoolConverters.Not}, FallbackValue=True}">
      <m:Card
        Margin="10"
        Padding="30"
        VerticalAlignment="Top">
        <StackPanel Orientation="Vertical">


          <TextBlock TextAlignment="Center">
            👋 Hello and welcome!&#10;&#10;Please log in to use this connector:
          </TextBlock>
          <Button
            Margin="15,40,15,15"
            Command="{Binding LaunchManagerCommand}"
            Content="Log In using Manager"
            IsEnabled="{Binding IsLoggingIn, Converter={x:Static BoolConverters.Not}, FallbackValue=False}"
            ToolTip.Tip="Manager is the reccomended way to log in and install Connectors" />
          <TextBlock TextAlignment="Center">
            or
          </TextBlock>
          <Button
            Margin="15"
            Command="{Binding AddAccountCommand}"
            Content="Log In directly"
            IsVisible="{Binding IsLoggingIn, Converter={x:Static BoolConverters.Not}, FallbackValue=False}"
            ToolTip.Tip="Direct log in is currently only supported on our XYZ server" />
          <StackPanel IsVisible="{Binding IsLoggingIn, FallbackValue=False}" Orientation="Vertical">
            <TextBlock Margin="15" TextAlignment="Center">
              ☝ Please follow the instructions in your browser.
            </TextBlock>
            <ProgressBar Classes="Circle" IsIndeterminate="True" />
          </StackPanel>

        </StackPanel>

      </m:Card>

    </Grid>
  </Grid>
</UserControl>
