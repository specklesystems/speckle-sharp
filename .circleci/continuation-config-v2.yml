version: 2.1

orbs:
  win: circleci/windows@5.0.0
  aws-s3: circleci/aws-s3@2.0.0
  discord: antonioned/discord@0.1.0

commands:
  set-version-env-vars:
    steps:
      - run:
          name: Set Version environment variables
          command: |
            TAG=$(if [ "${CIRCLE_TAG}" ]; then echo $CIRCLE_TAG; else echo "2.0.999"; fi;)
            SEMVER=$(echo "$TAG" | sed -e 's/\/[a-zA-Z-]*//')
            VER=$(echo "$SEMVER" | sed -e 's/-beta//')
            VERSION=$(echo $VER.$WORKFLOW_NUM)
            echo $VERSION
          environment:
            WORKFLOW_NUM: << pipeline.number >>
  cached-checkout:
    steps:
      - restore_cache:
          keys:
            - &source-cache source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-
      - checkout
      - save_cache:
          key: *source-cache
          paths:
            - ".git"
  publish-nugets:
    steps:
      - run:
          name: Publish nuget package
          command: dotnet nuget push "**/*.nupkg" -s https://api.nuget.org/v3/index.json -k $NUGET_APIKEY -n --skip-duplicate
  deploy-connector:
    parameters:
      slug:
        type: string
      os:
        type: string
      extension:
        type: string
      arch:
        type: string
        default: Any
      version:
        type: string
    steps:
      - run:
          name: Upload new version
          command: Speckle.Manager.Feed deploy
            -a << parameters.arch >>
            -s << parameters.slug >>
            -v << parameters.version >>
            -o << parameters.os >>
            -u https://releases.speckle.dev/installers/<< parameters.slug >>/<< parameters.slug >>-${SEMVER}.<< parameters.extension >>
            -f speckle-sharp-ci-tools/Installers/<< parameters.slug >>/<< parameters.slug >>-${SEMVER}.<< parameters.extension >>

jobs:
  get-ci-tools:
    docker:
      - image: cimg/base:2021.01
    steps:
      - add_ssh_keys:
          fingerprints:
            - "62:b2:1a:86:b7:9f:83:91:9b:61:f8:52:66:38:78:64"
      - run:
          name: I know Github as a host
          command: |
            mkdir ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run: # Could not get ssh to work, so using a personal token
          name: Clone
          command: git clone git@github.com:specklesystems/speckle-sharp-ci-tools.git speckle-sharp-ci-tools
      - persist_to_workspace:
          root: ./
          paths:
            - speckle-sharp-ci-tools
  build-sdk:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:7.0
    steps:
      - cached-checkout
      - run:
          name: Restore SDK projects
          command: dotnet restore SDK.slnf -c Release
      - run:
          name: Build SDK projects
          command: dotnet build SDK.slnf --no-restore -c Release
      - run:
          name: Run SDK Unit Tests
          command: dotnet test SDK.slnf
            --filter 'FullyQualifiedName!~TestsIntegration'
            --no-restore
            -c Release
            --logger:"junit;LogFileName={assembly}.results.xml"
            --results-directory=TestResults
            --collect:"XPlat Code Coverage"-- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
      - store_test_results:
          path: TestResults
  test-core:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:7.0
      # Node, redis, postgres and speckle-server images for test server
      - image: cimg/node:16.15
      - image: cimg/redis:7.0.5
      - image: cimg/postgres:14.5
        environment:
          POSTGRES_DB: speckle2_test
          POSTGRES_PASSWORD: speckle
          POSTGRES_USER: speckle
      - image: minio/minio
        command: server /data --console-address ":9001"
      - image: speckle/speckle-server:latest
        command: ["bash", "-c", "/wait && node bin/www"]
        environment:
          POSTGRES_URL: "127.0.0.1"
          POSTGRES_USER: "speckle"
          POSTGRES_PASSWORD: "speckle"
          POSTGRES_DB: "speckle2_test"
          REDIS_URL: "redis://127.0.0.1"
          SESSION_SECRET: "keyboard cat"
          STRATEGY_LOCAL: "true"
          CANONICAL_URL: "http://localhost:3000"
          S3_ENDPOINT: "http://127.0.0.1:9000"
          S3_ACCESS_KEY: "minioadmin"
          S3_SECRET_KEY: "minioadmin"
          S3_BUCKET: "speckle-server"
          S3_CREATE_BUCKET: "true"
          WAIT_HOSTS: 127.0.0.1:5432, 127.0.0.1:6379, 127.0.0.1:9000
    steps:
      - cached-checkout
      - run:
          name: Integration Tests # The integration tests are runinng on our test sevrer
          command: dotnet test Core/IntegrationTests/TestsIntegration.csproj -c Release -v q --logger:"junit;LogFileName={assembly}.results.xml" --results-directory=TestResults --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
      - store_artifacts:
          path: TestResults
  build-connector:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:7.0
    parameters:
      sln-name:
        type: string
      slug:
        type: string
      build-config:
        type: string
        default: "Release"
    steps:
      - cached-checkout
      - set-version-env-vars
      - attach_workspace:
          at: ./
      - run:
          name: Restore << parameters.sln-name >>
          command: dotnet restore
            << parameters.slnname >>/<< parameters.sln-name >>.slnf
            -c '<< parameters.build-config >>'
      - run:
          name: Build << parameters.sln-name >>
          command: dotnet publish
            << parameters.slnname >>/<< parameters.sln-name >>.slnf
            --no-restore
            -c '<< parameters.build-config >>'
            /p:IsDesktopBuild=false
            /p:Version=$SEMVER
      - persist_to_workspace:
          paths:
            - << parameters.slnname >>/*/bin/<< parameters.build-config >>/publish
  build-mac-installers:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:7.0
    steps:
      - cached-checkout
      - attach_workspace:
          at: ./
  build-win-installers:
    executor:
      name: win/default
      shell: powershell.exe
    steps:
      - cached-checkout
      - attach_workspace:
          at: ./
      - run:
          name: Create Innosetup signing cert
          command: |
            echo $env:PFX_B64 > "speckle-sharp-ci-tools\SignTool\AEC Systems Ltd.txt"
            certutil -decode "speckle-sharp-ci-tools\SignTool\AEC Systems Ltd.txt" "speckle-sharp-ci-tools\SignTool\AEC Systems Ltd.pfx"
      - run:
          name: Build Installer
          command: speckle-sharp-ci-tools\InnoSetup\ISCC.exe speckle-sharp-ci-tools\%SLUG%.iss /Sbyparam=$p
          shell: cmd.exe #does not work in powershell
          environment:
            SLUG: << parameters.slug >>
  deploy-connectors-check:
    docker:
      - image: cimg/base:2021.01
    steps:
      - run:
          name: Proceed to deploy
          command: echo "This step is just here to wait for all build jobs before proceeding to deploy each of them individually. If a job fails, no connector will be deployed."
  deploy-connector:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:7.0
    parameters:
      slug:
        type: string
      os:
        type: string
      extension:
        type: string
      arch:
        type: string
        default: Any
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Install Manager Feed CLI
          command: dotnet tool install --global Speckle.Manager.Feed
      - run:
          name: Upload new version
          command: |
            Speckle.Manager.Feed deploy -s << parameters.slug >> -v ${SEMVER} -u https://releases.speckle.dev/installers/<< parameters.slug >>/<< parameters.slug >>-${SEMVER}.<< parameters.extension >> -o << parameters.os >> -a << parameters.arch >> -f speckle-sharp-ci-tools/Installers/<< parameters.slug >>/<< parameters.slug >>-${SEMVER}.<< parameters.extension >>
          environment:
            WORKFLOW_NUM: << pipeline.number >>

workflows:
  build:
    jobs:
      - get-ci-tools:
          context: github-dev-bot
      - build-sdk:
          requires:
            - get-ci-tools
      - test-core:
          requires:
            - build-sdk
